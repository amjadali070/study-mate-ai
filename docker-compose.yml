version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rag_postgres
    environment:
      POSTGRES_DB: rag_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    networks:
      - rag_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: rag_server
    environment:
      # Database
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/rag_db?schema=public"
      
      # JWT
      JWT_SECRET: "your-super-secret-jwt-key-change-in-production"
      JWT_EXPIRES_IN: "7d"
      
      # OpenAI - Replace with your actual API key
      OPENAI_API_KEY: "${OPENAI_API_KEY:-your-openai-api-key-here}"
      
      # Pinecone - Replace with your actual credentials
      PINECONE_API_KEY: "${PINECONE_API_KEY:-your-pinecone-api-key-here}"
      PINECONE_ENVIRONMENT: "${PINECONE_ENVIRONMENT:-your-pinecone-environment}"
      PINECONE_INDEX_NAME: "${PINECONE_INDEX_NAME:-rag-embeddings}"
      
      # Server
      PORT: 4000
      NODE_ENV: "production"
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - rag_network
    volumes:
      - ./server/uploads:/app/uploads
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: rag_client
    ports:
      - "5173:5173"
    depends_on:
      - server
    networks:
      - rag_network
    restart: unless-stopped

networks:
  rag_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
